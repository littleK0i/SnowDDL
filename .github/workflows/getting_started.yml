name: Getting Started

on:
  push:
    paths:
      - "**.py"
      - "**.yml"
      - "**.yaml"
  workflow_dispatch:

jobs:
  getting_started:
    strategy:
      fail-fast: false
      matrix:
        include:
          - env-prefix: PY37_BC
            python-version: 3.7
            account-ident: ij36903.eu-west-2.aws

          - env-prefix: PY39_BC
            python-version: 3.9
            account-ident: ij36903.eu-west-2.aws

    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        run: pip install -e .

      - name: "Cleanup"
        run: snowddl -c sample01_01 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe destroy

      - name: "Apply v1, run 1"
        run: snowddl -c sample01_01 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe apply

      - name: "Apply v1, run 2"
        run: snowddl -c sample01_01 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe apply

      - name: "Apply v2, run 1"
        run: snowddl -c sample01_02 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe apply

      - name: "Apply v2, run 2"
        run: snowddl -c sample01_02 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe apply

      - name: "Apply test"
        run: snowddl -c test01 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --apply-unsafe --apply-masking-policy --apply-row-access-policy apply

      - name: "Apply singledb"
        run: snowddl-singledb -c test01 -a ${{ matrix.account-ident }} -u snowddl --env-prefix=${{ matrix.env-prefix }} --config-db=TEST_DB --target-db=ANOTHER_DB --apply-unsafe --apply-masking-policy --apply-row-access-policy apply
